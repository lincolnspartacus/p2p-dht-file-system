syntax = "proto3";

service ChordService {
    rpc findSuccessor(FindSuccessorRequest) returns (FindSuccessorResponse) {}
    rpc findSuccessorsPred(Empty) returns (FindSuccessorsPredResponse) {}
    rpc debug(Empty) returns (DebugInfo) {}

    rpc notify(NotifyRequest) returns (NotifyResponse) {}
    rpc checkPredecessor(Empty) returns (Empty) {}
    rpc getSuccessorList(Empty) returns (getSuccessorListResponse) {}
    rpc upload(stream Chunk) returns (Reply) {}
    rpc download(Request) returns (stream Chunk) {}
}

service BootstrapService {
    rpc getNode(Empty) returns (NodeInfo) {}
    rpc addNode(NodeInfo) returns (Empty) {}
    rpc clearTable(Empty) returns (Empty) {}
}

message NodeInfo {
    int32 id = 1;
    string ip = 2;
}

message FindSuccessorRequest {
    int32 id = 1;
}

message FindSuccessorResponse {
    int32 id = 1;
    string ip = 2;
    bool is_final = 3;
}

message FindSuccessorsPredResponse {
    int32 id = 1;
    string ip = 2;
}

message DebugInfo {
    NodeInfo predecessor = 1;
    NodeInfo successor = 2;
    NodeInfo self_node = 3;
    repeated NodeInfo ftable = 4;
}

message getSuccessorListResponse{
    repeated NodeInfo succList = 1;
}

message Empty {}

message NotifyRequest {
    int32 predecessorId = 1;
    string addr = 2;
}

message Pair {
    string key = 1;
    int32 len = 2;
    int32 seq_num = 3;
    repeated string addrs = 4;
}

message NotifyResponse {
    int32 result = 1;
}

message Chunk {
  bytes buffer = 1;
}

message Request {
  string name = 1;
}

message Reply {
  int32 length = 1;
}